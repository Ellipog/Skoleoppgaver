{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ellio\\\\OneDrive\\\\Dokumenter\\\\GitHub\\\\Skoleoppgaver_Elliot\\\\Forsinka\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [forsinkelser, setForsinkelser] = useState([]);\n  async function test() {\n    fetch(\"http://localhost:3001/forsinkelser\").then(res => res.json()).then(data => {\n      setForsinkelser(data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: test,\n      children: \"TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), forsinkelser.map(forsinkelse => (forsinkelser.sort((a, b) => {\n      return new Date(b.aimedTime) - new Date(a.aimedTime);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forsinkelseBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lineBox\",\n        children: [\"Line: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [forsinkelse.line, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: forsinkelse.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"aimedBox\",\n        children: [\"Original Tid: \", new Date(forsinkelse.aimedTime).toTimeString().slice(0, 5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"expectedBox\",\n        children: [\"Faktisk Tid: \", new Date(forsinkelse.expectedTime).toTimeString().slice(0, 5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"diffBox\",\n        children: [\"Differanse: \", Math.round((Date.parse(forsinkelse.aimedTime) - Date.parse(forsinkelse.expectedTime) % 86400000) % 3600000 / 60000)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)]\n    }, forsinkelse.id + {} + forsinkelse.aimedTime, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4Z7XcViwdwQPr0xsY8pc+2maW9s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","App","forsinkelser","setForsinkelser","test","fetch","then","res","json","data","map","forsinkelse","sort","a","b","Date","aimedTime","line","name","toTimeString","slice","expectedTime","Math","round","parse","id"],"sources":["C:/Users/Ellio/OneDrive/Dokumenter/GitHub/Skoleoppgaver_Elliot/Forsinka/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [forsinkelser, setForsinkelser] = useState([]);\n\n  async function test() {\n    fetch(\"http://localhost:3001/forsinkelser\")\n      .then((res) => res.json())\n      .then((data) => {\n        setForsinkelser(data);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={test}>TEST</button>\n      {forsinkelser.map(\n        (forsinkelse) => (\n          forsinkelser.sort((a, b) => {\n            return new Date(b.aimedTime) - new Date(a.aimedTime);\n          }),\n          (\n            <div className=\"forsinkelseBox\" key={forsinkelse.id + {} + forsinkelse.aimedTime}>\n              <p className=\"lineBox\">\n                Line: <span>{forsinkelse.line} </span>\n                <span>{forsinkelse.name}</span>\n              </p>\n              <p className=\"aimedBox\">Original Tid: {new Date(forsinkelse.aimedTime).toTimeString().slice(0, 5)}</p>\n              <p className=\"expectedBox\">Faktisk Tid: {new Date(forsinkelse.expectedTime).toTimeString().slice(0, 5)}</p>\n              <p className=\"diffBox\">Differanse: {Math.round(((Date.parse(forsinkelse.aimedTime) - (Date.parse(forsinkelse.expectedTime) % 86400000)) % 3600000) / 60000)}</p>\n            </div>\n          )\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEpD,eAAeI,IAAI,GAAG;IACpBC,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdN,eAAe,CAACM,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,OAAO,EAAEL,IAAK;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,EACnCF,YAAY,CAACQ,GAAG,CACdC,WAAW,KACVT,YAAY,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC1B,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC;IACtD,CAAC,CAAC,eAEA;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAG,SAAS,EAAC,SAAS;QAAA,WAAC,QACf;UAAA,WAAOL,WAAW,CAACM,IAAI,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eACtC;UAAA,UAAON,WAAW,CAACO;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eACJ;QAAG,SAAS,EAAC,UAAU;QAAA,WAAC,gBAAc,EAAC,IAAIH,IAAI,CAACJ,WAAW,CAACK,SAAS,CAAC,CAACG,YAAY,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACtG;QAAG,SAAS,EAAC,aAAa;QAAA,WAAC,eAAa,EAAC,IAAIL,IAAI,CAACJ,WAAW,CAACU,YAAY,CAAC,CAACF,YAAY,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3G;QAAG,SAAS,EAAC,SAAS;QAAA,WAAC,cAAY,EAACE,IAAI,CAACC,KAAK,CAAE,CAACR,IAAI,CAACS,KAAK,CAACb,WAAW,CAACK,SAAS,CAAC,GAAID,IAAI,CAACS,KAAK,CAACb,WAAW,CAACU,YAAY,CAAC,GAAG,QAAS,IAAI,OAAO,GAAI,KAAK,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GAP7HV,WAAW,CAACc,EAAE,GAAG,CAAC,CAAC,GAAGd,WAAW,CAACK,SAAS;MAAA;MAAA;MAAA;IAAA,QASjF,CACF,CACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAlCQf,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}