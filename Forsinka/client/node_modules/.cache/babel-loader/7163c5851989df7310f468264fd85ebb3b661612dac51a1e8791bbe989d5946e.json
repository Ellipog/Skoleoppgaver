{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ellio\\\\OneDrive\\\\Dokumenter\\\\GitHub\\\\Skoleoppgaver_Elliot\\\\Forsinka\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet aimedTime;\nfunction App() {\n  _s();\n  const [forsinkelser, setForsinkelser] = useState([]);\n  async function test() {\n    fetch(\"http://localhost:3001/forsinkelser\").then(res => res.json()).then(data => {\n      setForsinkelser(data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: test,\n      children: \"TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), forsinkelser.map(forsinkelse => (forsinkelser.sort((a, b) => {\n      return new Date(b.aimedTime) - new Date(a.aimedTime);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forsinkelseBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lineBox\",\n        children: [\"Line: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [forsinkelse.line, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: forsinkelse.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"aimedBox\",\n        children: [\"Aimed Time: \", forsinkelse.aimedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"expectedBox\",\n        children: [\"Expected Time: \", forsinkelse.expectedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)]\n    }, forsinkelse.id + {} + forsinkelse.aimedTime, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4Z7XcViwdwQPr0xsY8pc+2maW9s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","aimedTime","App","forsinkelser","setForsinkelser","test","fetch","then","res","json","data","map","forsinkelse","sort","a","b","Date","line","name","expectedTime","id"],"sources":["C:/Users/Ellio/OneDrive/Dokumenter/GitHub/Skoleoppgaver_Elliot/Forsinka/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nlet aimedTime;\n\nfunction App() {\n  const [forsinkelser, setForsinkelser] = useState([]);\n\n  async function test() {\n    fetch(\"http://localhost:3001/forsinkelser\")\n      .then((res) => res.json())\n      .then((data) => {\n        setForsinkelser(data);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={test}>TEST</button>\n      {forsinkelser.map(\n        (forsinkelse) => (\n          forsinkelser.sort((a, b) => {\n            return new Date(b.aimedTime) - new Date(a.aimedTime);\n          }),\n          (\n            <div className=\"forsinkelseBox\" key={forsinkelse.id + {} + forsinkelse.aimedTime}>\n              <p className=\"lineBox\">\n                Line: <span>{forsinkelse.line} </span>\n                <span>{forsinkelse.name}</span>\n              </p>\n              <p className=\"aimedBox\">Aimed Time: {forsinkelse.aimedTime}</p>\n              <p className=\"expectedBox\">Expected Time: {forsinkelse.expectedTime}</p>\n            </div>\n          )\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AACxC,IAAIC,SAAS;AAEb,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpD,eAAeK,IAAI,GAAG;IACpBC,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdN,eAAe,CAACM,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,OAAO,EAAEL,IAAK;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,EACnCF,YAAY,CAACQ,GAAG,CACdC,WAAW,KACVT,YAAY,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC1B,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACd,SAAS,CAAC,GAAG,IAAIe,IAAI,CAACF,CAAC,CAACb,SAAS,CAAC;IACtD,CAAC,CAAC,eAEA;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAG,SAAS,EAAC,SAAS;QAAA,WAAC,QACf;UAAA,WAAOW,WAAW,CAACK,IAAI,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eACtC;UAAA,UAAOL,WAAW,CAACM;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eACJ;QAAG,SAAS,EAAC,UAAU;QAAA,WAAC,cAAY,EAACN,WAAW,CAACX,SAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC/D;QAAG,SAAS,EAAC,aAAa;QAAA,WAAC,iBAAe,EAACW,WAAW,CAACO,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GANrCP,WAAW,CAACQ,EAAE,GAAG,CAAC,CAAC,GAAGR,WAAW,CAACX,SAAS;MAAA;MAAA;MAAA;IAAA,QAQjF,CACF,CACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAjCQC,GAAG;AAAA,KAAHA,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}